{
  "name": "PII Sanitization Chat Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "1a1a1a1a-1111-1111-1111-111111111111",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        464,
        240
      ],
      "webhookId": "chat-input"
    },
    {
      "parameters": {
        "jsCode": "// Parse the AI response and structure the data\nconst aiResponse = $input.first().json.message.content;\n\ntry {\n  // Parse the JSON response from OpenAI\n  const piiData = JSON.parse(aiResponse);\n  // Generate a unique session ID for this conversation\n  const sessionId = $workflow.id + '_' + Date.now();\n  //console.log(\"DEBUG sessionId=\" + sessionId + \", piiData=\" + piiData);\n  \n  // Store the PII mapping in workflow memory\n  //$workflow.piiMappings = $workflow.piiMappings || {};\n  //$workflow.piiMappings[sessionId] = piiData.pii_mapping;\n  \n  return {\n    json: {\n      sessionId: sessionId,\n      sanitized_text: piiData.sanitized_text,\n      pii_mapping: piiData.pii_mapping,\n      original_input: $('Webhook').first().json.body.message,\n      timestamp: new Date().toISOString()\n    }\n  };\n} catch (error) {\n  console.log(\"ERROR: \" + error);\n  return {\n    json: {\n      error: 'Failed to parse AI response',\n      raw_response: aiResponse,\n      original_input: $('Webhook').first().json.body.message\n    }\n  };\n}"
      },
      "id": "3c3c3c3c-3333-3333-3333-333333333333",
      "name": "Process PII Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        240
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": {
          "status": "success",
          "sanitized_text": "={{ $json.sanitized_text }}",
          "session_id": "={{ $json.sessionId }}",
          "pii_mapping": "={{ $json.pii_mapping }}",
          "original_input": "={{ $json.original_input }}",
          "timestamp": "={{ $json.timestamp }}"
        },
        "options": {}
      },
      "id": "4d4d4d4d-4444-4444-4444-444444444444",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1264,
        240
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-5-nano",
          "mode": "list",
          "cachedResultName": "GPT-5-NANO"
        },
        "messages": {
          "values": [
            {
              "content": "You are a PII detection and tokenization system.\n\nExtract PII from the input text and replace with tokens:\n- Names: [Person1], [Person2], etc.\n- Addresses: [Address1], [Address2], etc.\n- Phone numbers: [Phone1], [Phone2], etc.\n- Email addresses: [Email1], [Email2], etc.\n- SSN/ID numbers: [ID1], [ID2], etc.\n\nReturn ONLY valid JSON format:\n{\n  \"sanitized_text\": \"text with PII replaced by tokens\",\n  \"pii_mapping\": {\n    \"[Person1]\": \"actual name\",\n    \"[Address1]\": \"actual address\"\n  }\n}",
              "role": "system"
            },
            {
              "content": "={{ $json.body.message }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        688,
        240
      ],
      "id": "440d9a5b-f403-4122-ae77-91b2cedf281b",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "BGcTbTUCTxCVCepx",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process PII Data": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Process PII Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "de2f9bd7-1ab9-43ce-8e45-0ea3132bc8dd",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "060dac1fefe5feb9865b0fb3a4e242ee059b33980a03587a868224adc8c1d561"
  },
  "id": "1",
  "tags": []
}